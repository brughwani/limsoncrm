# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

#name: Deploy to Firebase Hosting on PR
#'on': pull_request
#jobs:
#  build_and_preview:
#    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Install flutter
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: "stable"
#      - run: flutter --version
#
#      - run: flutter build web --release
#      - uses: FirebaseExtended/action-hosting-deploy@v0
#        with:
#          repoToken: '${{ secrets.GITHUB_TOKEN }}'
#          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIMSONCRM }}'
#          projectId: limsoncrm
# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR

on:
  pull_request:

jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent LTS version

      - name: Setup Flutter with built-in caching
        uses: subosito/flutter-action@v2
        id: flutter-setup
        with:
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          cache-path: |
            ~/.pub-cache,.dart_tool,/opt/hostedtoolcache/flutter

      # Explicitly add Flutter and Dart to the PATH using the action's outputs
      - name: Add Flutter and Dart to PATH
        run: |
          echo "FLUTTER_ROOT=${{ steps.flutter-setup.outputs.flutter-path }}" >> $GITHUB_ENV
          echo "PUB_CACHE=${HOME}/.pub-cache" >> $GITHUB_ENV
          echo "${{ steps.flutter-setup.outputs.flutter-path }}/bin" >> $GITHUB_PATH
          echo "${{ steps.flutter-setup.outputs.dart-path }}/bin" >> $GITHUB_PATH
          echo "${HOME}/.pub-cache/bin" >> $GITHUB_PATH

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Firebase Tools
        run: npm install -g firebase-tools

      - name: Install FlutterFire CLI
        run: |
          flutter pub global activate flutterfire_cli

      - name: Create .env file from secret
        run: |
          mkdir -p assets
          echo "${{ secrets.DOTENV_CONTENTS }}" > assets/.env

      - name: Generate Firebase Options Securely
        run: |
          flutter pub global run flutterfire_cli:flutterfire configure \
            --project=${{ secrets.FIREBASE_PROJECT_ID }} \
            --platforms=web \
            --out=lib/firebase_options.dart \
            --yes
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Build web release
        run: flutter build web --release

      - name: Deploy to Firebase Hosting on Pull Request
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIMSONCRM }}'
          projectId: limsoncrm
          target: 'build/web'
          channelId: 'pr-${{ github.event.number }}'

